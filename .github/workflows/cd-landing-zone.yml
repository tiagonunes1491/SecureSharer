# Template for deploying a landing zone using Azure Bicep templates
# This workflow is triggered manually and allows the user to select the target environment (dev or prod).
name: 'CD - Landing Zone'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for deployment'
        required: true
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy-landing-zone:
    name: 'Deploy Landing Zone'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: ${{ inputs.environment }}
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
            
      - name: 'Login to Azure before PIM approval'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: 'Activate PIM Roles and Wait for UAMI Inheritance'
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_UAMI_PRINCIPAL_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_PIM_GROUP_OBJECT_ID: ${{ secrets.AZURE_PIM_GROUP_OBJECT_ID }}
        run: |
          GROUP_OBJECT_ID="${AZURE_PIM_GROUP_OBJECT_ID}"

          if [ -z "$GROUP_OBJECT_ID" ]; then
            echo "::error::AZURE_PIM_GROUP_OBJECT_ID secret is not set or is empty."
            exit 1
          fi

          echo "UAMI requesting PIM activation for roles eligible through group membership..."
          
          # Get access token
          ACCESS_TOKEN=$(az account get-access-token --resource https://management.azure.com/ --query accessToken -o tsv)
          
          JUSTIFICATION="GH Actions Run ${{ github.run_id }} for workflow ${{ github.workflow }} job ${{ github.job }}"
          START_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          
          # The UAMI requests activation of roles it's eligible for through group membership
          # The principalId should be the UAMI, not the group
          # But we need to reference the group-based eligibility
          
          echo "Requesting Contributor role activation through group membership..."
          curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"properties\": {
                \"principalId\": \"$AZURE_UAMI_PRINCIPAL_ID\",
                \"roleDefinitionId\": \"/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c\",
                \"requestType\": \"SelfActivate\",
                \"justification\": \"$JUSTIFICATION\",
                \"scheduleInfo\": {
                  \"startDateTime\": \"$START_TIME\",
                  \"expiration\": {
                    \"type\": \"AfterDuration\",
                    \"duration\": \"PT2H\"
                  }
                }
              }
            }" \
            "https://management.azure.com/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.Authorization/roleAssignmentScheduleRequests?api-version=2020-10-01"

          echo "Requesting User Access Administrator role activation through group membership..."
          curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"properties\": {
                \"principalId\": \"$AZURE_UAMI_PRINCIPAL_ID\",
                \"roleDefinitionId\": \"/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9\",
                \"requestType\": \"SelfActivate\",
                \"justification\": \"$JUSTIFICATION\",
                \"scheduleInfo\": {
                  \"startDateTime\": \"$START_TIME\",
                  \"expiration\": {
                    \"type\": \"AfterDuration\",
                    \"duration\": \"PT2H\"
                  }
                }
              }
            }" \
            "https://management.azure.com/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.Authorization/roleAssignmentScheduleRequests?api-version=2020-10-01"

          echo "Requesting Managed Identity Contributor role activation through group membership..."
          curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"properties\": {
                \"principalId\": \"$AZURE_UAMI_PRINCIPAL_ID\",
                \"roleDefinitionId\": \"/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.Authorization/roleDefinitions/e4062425-5110-4434-8464-414b433434d3\",
                \"requestType\": \"SelfActivate\",
                \"justification\": \"$JUSTIFICATION\",
                \"scheduleInfo\": {
                  \"startDateTime\": \"$START_TIME\",
                  \"expiration\": {
                    \"type\": \"AfterDuration\",
                    \"duration\": \"PT2H\"
                  }
                }
              }
            }" \
            "https://management.azure.com/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.Authorization/roleAssignmentScheduleRequests?api-version=2020-10-01"

          echo "PIM activation requests submitted for UAMI. Waiting for approval..."
          
          # Wait for role activation
          end_time=$((SECONDS+600))
          roles_activated=false
          while [ $SECONDS -lt $end_time ]; do
            active_roles=$(az role assignment list --assignee $AZURE_UAMI_PRINCIPAL_ID --include-groups --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID" --query "[].roleDefinitionName" -o tsv)
            if echo "$active_roles" | grep -q "Contributor" && \
               echo "$active_roles" | grep -q "User Access Administrator" && \
               echo "$active_roles" | grep -q "Managed Identity Contributor"; then
              echo "All 3 PIM roles have been approved and are now active for the UAMI!"
              roles_activated=true
              break
            fi
            echo "Required roles not active for UAMI yet. Waiting 30 seconds..."
            sleep 30
          done

          if [ "$roles_activated" = false ]; then
            echo "::error::Timeout: Not all required PIM roles were approved within the 10-minute window."
            echo "Current active roles for UAMI ($AZURE_UAMI_PRINCIPAL_ID):"
            echo "$active_roles"
            exit 1
          fi
          echo "PIM roles successfully activated for UAMI."
          
      - name: 'Re-login to Azure after PIM approval'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy Landing Zone bicep template'
        env:
          AZURE_PREFIX_SECRET: ${{ secrets.AZURE_PREFIX }}
        run: |
          az deployment sub create \
            --name "landing-zone-${{ inputs.environment }}-${{ github.run_id }}" \
            --location ${{ vars.AZURE_REGION }} \
            --template-file ./infrastructure/landing-zone.bicep \
            --parameters environment=${{ inputs.environment }} location=${{ vars.AZURE_REGION }} prefix=${{ env.AZURE_PREFIX_SECRET }} tags="Environment=${{ inputs.environment }} Project=${{ vars.PROJECT_NAME }} DeployedBy=GitHubActions RunId=${{ github.run_id }}"
