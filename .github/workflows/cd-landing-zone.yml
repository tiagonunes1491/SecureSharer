# Template for deploying a landing zone using Azure Bicep templates
# This workflow is triggered manually and allows the user to select the target environment (dev or prod).
name: 'CD - Landing Zone'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for deployment'
        required: true
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy-landing-zone:
    name: 'Deploy Landing Zone'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: ${{ inputs.environment }}
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
            
      - name: 'Re-login to Azure after PIM approval'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: 'Activate PIM Roles and Wait for UAMI Inheritance'
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_PIM_GROUP_NAME: ${{ secrets.AZURE_PIM_GROUP_NAME }} # Name of the Azure AD group for PIM activation
          AZURE_UAMI_PRINCIPAL_ID: ${{ secrets.AZURE_CLIENT_ID }} # Principal ID of the UAMI
        run: |
          echo "Finding Object ID for group '${AZURE_PIM_GROUP_NAME}'..."
          GROUP_OBJECT_ID=$(az ad group show --group "${AZURE_PIM_GROUP_NAME}" --query "id" -o tsv)
          if [ -z "$GROUP_OBJECT_ID" ]; then
            echo "::error::Could not find Azure AD group with name '${AZURE_PIM_GROUP_NAME}'."
            exit 1
          fi
          echo "Found Group Object ID: $GROUP_OBJECT_ID"

          echo "Submitting PIM activation requests for the group..."
          JUSTIFICATION="GH Actions Run ${{ github.run_id }} for workflow ${{ github.workflow }} job ${{ github.job }}"
          # Contributor Role
          az role eligibility schedule request create --principal-id $GROUP_OBJECT_ID --role-definition-id 'b24988ac-6180-42a0-ab88-20f7382dd24c' --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID" --justification "$JUSTIFICATION"
          # User Access Administrator Role
          az role eligibility schedule request create --principal-id $GROUP_OBJECT_ID --role-definition-id '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9' --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID" --justification "$JUSTIFICATION"
          # Custom/Specific Role (ensure this ID is correct for your needs)
          az role eligibility schedule request create --principal-id $GROUP_OBJECT_ID --role-definition-id 'e4062425-5110-4434-8464-414b433434d3' --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID" --justification "$JUSTIFICATION"

          echo "Workflow is now paused, waiting for up to 10 minutes for 3 manual PIM approvals for the group in the Azure Portal, and for roles to be inherited by UAMI (${AZURE_UAMI_PRINCIPAL_ID})..."
          end_time=$((SECONDS+600))
          roles_activated=false
          while [ $SECONDS -lt $end_time ]; do
            # Check active roles for the UAMI (which should be a member of the group)
            active_roles=$(az role assignment list --assignee $AZURE_UAMI_PRINCIPAL_ID --include-groups --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID" --query "[].roleDefinitionName" -o tsv)
            if echo "$active_roles" | grep -q "Contributor" && \
               echo "$active_roles" | grep -q "User Access Administrator" && \
               echo "$active_roles" | grep -q "Managed Identity Contributor"; then # Ensure this role name matches the one activated by the third GUID
              echo "All 3 PIM roles have been approved and inherited by the UAMI!"
              roles_activated=true
              break
            fi
            echo "Required roles not active for UAMI yet. Waiting 30 seconds..."
            sleep 30
          done

          if [ "$roles_activated" = false ]; then
            echo "::error::Timeout: Not all required PIM roles were approved or inherited by the UAMI within the 10-minute window."
            echo "Current active roles for UAMI ($AZURE_UAMI_PRINCIPAL_ID):"
            echo "$active_roles"
            exit 1
          fi
          echo "PIM roles successfully activated and inherited by UAMI."

      - name: 'Re-login to Azure after PIM approval'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy Landing Zone bicep template'
        env:
          AZURE_PREFIX_SECRET: ${{ secrets.AZURE_PREFIX }}
        run: |
          az deployment sub create \
            --name "landing-zone-${{ inputs.environment }}-${{ github.run_id }}" \
            --location ${{ vars.AZURE_REGION }} \
            --template-file ./infrastructure/landing-zone.bicep \
            --parameters environment=${{ inputs.environment }} location=${{ vars.AZURE_REGION }} prefix=${{ env.AZURE_PREFIX_SECRET }} tags="Environment=${{ inputs.environment }} Project=${{ vars.PROJECT_NAME }} DeployedBy=GitHubActions RunId=${{ github.run_id }}"
