# Template for deploying shared infrastructure (ACR) using Azure Bicep templates
# This workflow is triggered manually to deploy the Azure Container Registry
name: 'CD - Shared Infrastructure (ACR)'

on:
  workflow_dispatch:
jobs:
  what-if-analysis:
    name: 'What-If Analysis'
    runs-on: ubuntu-latest
    environment: shared
    permissions:
      contents: read
      id-token: write
    outputs:
      what-if-results: ${{ steps.whatif.outputs.results }}
      has-changes: ${{ steps.check-changes.outputs.has-changes }}
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENTID_ART_READONLY }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run What-If Analysis'
        id: whatif
        env:
          SHARED_RG_NAME: ${{ vars.SHARED_RG_NAME }}
        run: |
          echo "Running what-if analysis for resource group: ${{ env.SHARED_RG_NAME }}"
          echo "ACR Name: ${{ vars.ACR_NAME }}"
          
          # First, let's verify the resource group exists
          echo "Checking if resource group exists..."
          if az group show --name "${{ env.SHARED_RG_NAME }}" 2>/dev/null; then
            echo "‚úÖ Resource group '${{ env.SHARED_RG_NAME }}' exists"
          else
            echo "‚ùå Resource group '${{ env.SHARED_RG_NAME }}' does not exist"
            echo "Creating resource group..."
            az group create --name "${{ env.SHARED_RG_NAME }}" --location "${{ vars.AZURE_REGION }}"
          fi
          
          # Check if the bicep file exists
          if [ -f "./infra/shared-infra.bicep" ]; then
            echo "‚úÖ Bicep file exists at ./infra/shared-infra.bicep"
          else
            echo "‚ùå Bicep file not found at ./infra/shared-infra.bicep"
            echo "Current directory: $(pwd)"
            echo "Files in infra directory:"
            ls -la ./infra/ || echo "infra directory not found"
            exit 1
          fi
          
          # Run what-if analysis with better error handling
          echo "Running what-if analysis..."
          set +e  # Don't exit on error
          whatif_output=$(az deployment group what-if \
            --resource-group "${{ env.SHARED_RG_NAME }}" \
            --template-file ./infra/shared-infra.bicep \
            --parameters acrName="${{ vars.ACR_NAME }}" \
                         resourceLocation="${{ vars.AZURE_REGION }}" \
                         tags='{"environment":"shared","project":"${{ vars.PROJECT_NAME }}","owner":"GitHubActions"}' \
            --result-format FullResourcePayloads 2>&1)
          exit_code=$?
          set -e  # Re-enable exit on error
          
          if [ $exit_code -ne 0 ]; then
            echo "‚ùå What-if analysis failed with exit code: $exit_code"
            echo "Error output:"
            echo "$whatif_output"
            exit 1
          fi
          
          echo "What-if analysis completed"
          echo "$whatif_output"
          
          # Save results for next job
          echo "results<<EOF" >> $GITHUB_OUTPUT
          echo "$whatif_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 'Check for Changes'
        id: check-changes
        run: |
          # Check if what-if output contains any changes
          whatif_output="${{ steps.whatif.outputs.results }}"
          
          # Look for indicators of changes in the what-if output
          if echo "$whatif_output" | grep -q "No changes detected"; then
            echo "No changes detected in what-if analysis"
            echo "has-changes=false" >> $GITHUB_OUTPUT
          elif echo "$whatif_output" | grep -E -q "(Create|Modify|Delete|Deploy)"; then
            echo "Changes detected in what-if analysis"
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            # Default to true if we can't determine
            echo "Unable to determine changes, defaulting to deployment"
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: 'Create What-If Summary'
        env:
          SHARED_RG_NAME: ${{ vars.SHARED_RG_NAME }}
        run: |
          if [[ "${{ steps.check-changes.outputs.has-changes }}" == "true" ]]; then
            deployment_status="üöÄ **Deployment Required** - Changes detected"
          else
            deployment_status="‚úÖ **No Deployment Needed** - No changes detected"
          fi
          
          cat << EOF >> $GITHUB_STEP_SUMMARY
          ## üîç What-If Analysis Results
            **Target Resource Group:** \`${{ env.SHARED_RG_NAME }}\`
          **ACR Name:** \`${{ vars.ACR_NAME }}\`
          **Environment:** \`shared\`
          
          ### Status: $deployment_status
          
          ### Changes Preview:
          \`\`\`
          ${{ steps.whatif.outputs.results }}
          \`\`\`
          
          EOF
          
          if [[ "${{ steps.check-changes.outputs.has-changes }}" == "true" ]]; then
            echo "**Next Step:** Review the changes above and approve the deployment job to proceed." >> $GITHUB_STEP_SUMMARY
          else
            echo "**Next Step:** No action required. Infrastructure is already up to date." >> $GITHUB_STEP_SUMMARY
          fi

  deploy-shared-infrastructure:
    name: 'Deploy Shared Infrastructure'
    runs-on: ubuntu-latest
    needs: what-if-analysis
    if: needs.what-if-analysis.outputs.has-changes == 'true'
    permissions:
      contents: read
      id-token: write
    environment: shared-infra
    steps:
      - name: 'Display Approved Plan'
        run: |
          echo "‚úÖ Approval granted. Displaying approved changes before deployment."
          echo ""
          echo "üîç WHAT-IF ANALYSIS CHANGES:"
          echo "================================"
          echo "${{ needs.what-if-analysis.outputs.what-if-results }}"
          echo "================================"
          echo ""
          echo "üìã DEPLOYMENT DETAILS:"
          echo "‚Ä¢ Target Resource Group: ${{ vars.SHARED_RG_NAME }}"
          echo "‚Ä¢ ACR Name: ${{ vars.ACR_NAME }}"
          echo "‚Ä¢ Environment: shared"

      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
            
      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENTID_ART_CONT }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy Shared Infrastructure bicep template'
        env:
          SHARED_RG_NAME: ${{ vars.SHARED_RG_NAME }}
        run: |
          echo "Deploying to resource group: ${{ env.SHARED_RG_NAME }}"
          
          az deployment group create \
            --name "shared-infra-shared-${{ github.run_id }}" \
            --resource-group "${{ env.SHARED_RG_NAME }}" \
            --template-file ./infra/shared-infra.bicep \
            --parameters acrName="${{ vars.ACR_NAME }}" \
                         resourceLocation="${{ vars.AZURE_REGION }}" \
                         tags='{"environment":"shared","project":"${{ vars.PROJECT_NAME }}","owner":"GitHubActions","runId":"${{ github.run_id }}"}' \
            --verbose

      - name: 'Deployment Summary'
        env:
          SHARED_RG_NAME: ${{ vars.SHARED_RG_NAME }}
        run: |          
          echo "‚úÖ Deployment completed successfully!"
          echo "Resource Group: ${{ env.SHARED_RG_NAME }}"
          echo "ACR Name: ${{ vars.ACR_NAME }}"
          echo "Environment: shared"

  no-changes-summary:
    name: 'No Changes Required'
    runs-on: ubuntu-latest
    needs: what-if-analysis
    if: needs.what-if-analysis.outputs.has-changes == 'false'
    steps:
      - name: 'Summary'
        run: |
          echo "‚úÖ Infrastructure is already up to date!"          
          echo "No changes detected in what-if analysis."
          echo "ACR Name: ${{ vars.ACR_NAME }}"
          echo "Environment: shared"
